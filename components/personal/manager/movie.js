var movie=Vue.extend({
    template:'#movie',
    data:function(){
        return {
            url:'http://localhost:18080/manager/movie/',
            movies:[],
            title:['序号','电影名','演员','导演','类型','上映时间','地区'],
            items:['name','actor','director','type','time','area'],
            toOption:false,
            msg:[{name:'name',chn:'电影'},{name:'actor',chn:'演员'},{name:'director',chn:'导演'},{name:'type',type:'option',chn:'类型'},{name:'time',chn:'时间'},{name:'area',type:'option',chn:'地区'}],
            choseType:["","动作","战争","喜剧","爱情","科幻","现代","青春","动画","魔幻"],
            choseArea:["","大陆","香港","美国","印度"]
        }
    },
    created:function(){this.getAll()},
    methods:{
        conOp:function(){
            this.toOption=!this.toOption
        },
        deepCopy:function(obj1,obj2){
            for(var p in obj1){
                if(Array.isArray(obj1[p]))
                    obj2[p]==obj1[p].slice(0);
                else if(obj1[p]!=null&&(typeof obj1[p]=='object')){
                    obj2[p]={};
                    arguments.callee(obj1[p],obj2[p]);
                }else
                    obj2[p]=obj1[p];
            }
        },
        getAll:function(){
            axios({
                method:'get',
                url:this.url+'getAll'
            }).then(function(result){
                this.movies=result.data;
            }.bind(this)).catch(function(err){console.log(err)})
        },
        toDel:function(movie){
            this.$store.state.alertShow=true;
            this.$store.state.tipsContent='确定删除？';
            this.$store.state.delWhat=movie
        },
        del:function(movie){
            axios({
                url:this.url+'del',
                method:'get',
                params:movie
            }).then(function(result){
                this.$store.state.moveOrEnd=false;
                this.$store.state.tipsContent=result.data;
                this.getAll();
            }.bind(this)).catch(function(err){console.log(err)})
        },
        toEdit:function(movie){
            this.deepCopy(movie,this.$store.state.editWhat);
            //this.$store.state.editWhat=movie;
            this.$store.state.editShow=true;
            this.$store.state.isEdit=true;
        },
        edit:function(movie){
            axios({
                url:this.url+'edit',
                method:'get',
                params:movie
            }).then(function(result){
                console.log(result.data);
                this.$store.state.editShow=false;
                this.$store.state.editWhat={};
                this.$store.state.alertShow=true;
                this.$store.state.moveOrEnd=false;
                this.$store.state.tipsContent=result.data;
                this.getAll();
            }.bind(this)).catch(function(err){console.log(err)})
        },
        toAdd:function(){
            this.$store.state.editShow=true;
            this.$store.state.isEdit=false;
        },
        add:function(movie){
            axios({
                url:this.url+'add',
                method:'get',
                params:movie
            }).then(function(result){
                this.$store.state.editShow=false;
                this.$store.state.addWhat={name:'',actor:'',director:'',type:'',time:'',area:''};
                this.getAll();
                this.$store.state.alertShow=true;
                this.$store.state.moveOrEnd=false;
                this.$store.state.tipsContent=result.data;
            }.bind(this)).catch(function(err){console.log(err)})
        },
        search:function(){
            console.log(this.$store.state.search)
            axios({
                url:this.url+'search',
                method:'get',
                params:this.$store.state.search
            }).then(function(result){
                console.log(result.data);
                this.movies=result.data
            }.bind(this)).catch(function(err){console.log(err)})
        }
    }
})